{"version":3,"sources":["components/Input.js","components/Card.js","components/Messages.js","App.js","reportWebVitals.js","index.js"],"names":["InputData","props","useState","content","setContent","placeholder","className","value","onChange","event","target","onClick","preventDefault","getXML","Card","children","mock","_attributes","Date","Time","Text","_text","From","User","FriendlyName","Message","check","item","left","badge","Messages","data","key","isLeft","refined","filter","e","get","map","i","arr","prev","App","showInput","toggleInput","Log","setData","useEffect","result","xml2json","compact","spaces","parsed","JSON","parse","xmlString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGMA,EAAY,SAACC,GAAW,IAAD,EACGC,mBAAS,IADZ,mBACpBC,EADoB,KACXC,EADW,KAU3B,OACE,iCACE,0BACEC,YAAY,0BACZC,UAAU,eACVC,MAAOJ,EACPK,SAbe,SAACC,GAAD,OAAWL,EAAWK,EAAMC,OAAOH,UAepD,qBAAKD,UAAU,eAAf,SACE,wBACEA,UAAU,yBACVK,QAhBY,SAACF,GACnBA,EAAMG,iBACNX,EAAMY,OAAOV,IAYT,2BCrBFW,EAAO,SAACb,GAAD,OACX,qBAAKK,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACGL,EAAMc,c,yBCFPC,EAAO,CACXC,YAAa,CAAEC,KAAM,GAAIC,KAAM,IAC/BC,KAAM,CAAEC,MAAO,IACfC,KAAM,CAAEC,KAAM,CAAEN,YAAa,CAAEO,aAAc,OAGzCC,EAAU,SAACxB,GACf,IAEeyB,EAFTC,EAAO1B,EAAM0B,MAAQX,EAI3B,OACE,qBAAIV,WAHSoB,EAGQC,EAAKC,KAHHF,EAAQ,UAAY,iBAG3C,UACE,sBAAMpB,UAAU,OAAhB,SAAwBqB,EAAKL,KAAKC,KAAKN,YAAYO,eACnD,sBAAMlB,UANI,SAACoB,GAAD,OAAWA,EAAQ,mBAAqB,qBAMjCG,CAAMF,EAAKC,MAA5B,SAAoCD,EAAKP,KAAKC,QAC9C,uBAAMf,UAAU,YAAhB,UAA6BqB,EAAKV,YAAYC,KAA9C,IAAqDS,EAAKV,YAAYE,YAKtEW,EAAW,SAAC7B,GAChB,IAAM8B,EAAO9B,EAAM8B,MAAQ,CAACf,EAAKA,GAC3BgB,EAAM,qCACRC,GAAS,EAEPC,EAAUH,EACbI,QAAO,SAAAC,GAAC,OAAIC,IAAID,EAAGJ,MACnBM,KAAI,SAACF,EAAEG,EAAGC,GACT,IAAMC,EAAa,IAANF,EAAUA,EAAE,EAAI,EAG7B,OAFkBF,IAAID,EAAGJ,KAASK,IAAIG,EAAIC,GAAOT,KAChCC,GAAUA,GACpB,2BAAIG,GAAX,IAAcR,KAAMK,OAGxB,OACE,oBAAI3B,UAAU,gBAAd,SACG4B,EAAQI,KAAI,SAACF,EAAEG,GAAH,OAAS,cAAC,EAAD,CAAiBZ,KAAMS,GAATG,S,MCC3BG,MA3Bf,WAAgB,IAAD,EACiBxC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEoBF,oBAAS,GAF7B,mBAENyC,EAFM,KAEKC,EAFL,OAGW1C,mBAAS,CAAE2C,IAAK,CAAEpB,QAAS,MAHtC,mBAGNM,EAHM,KAGAe,EAHA,KAiBb,OAVAC,qBAAU,WACR,IAAMC,EAASC,mBAAS9C,EAAS,CAAE+C,SAAS,EAAMC,OAAQ,IACpDC,EAASC,KAAKC,MAAMN,GAEtBI,EAAOP,MACTC,EAAQM,GACRR,GAAY,MAEb,CAACzC,IAGF,sBAAMG,UAAU,YAAhB,SACE,eAAC,EAAD,WACE,sDACCqC,EAAY,cAAC,EAAD,CAAW9B,OAhBT,SAAC0C,GAAD,OAAenD,EAAWmD,MAgBU,cAAC,EAAD,CAAUxB,KAAMA,EAAKc,IAAIpB,gBCrBrE+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.acc20e2b.chunk.js","sourcesContent":["\nimport { useState } from 'react';\n\nconst InputData = (props) => {\n  const [content, setContent] = useState('');\n\n  const handleChange = (event) => setContent(event.target.value);\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    props.getXML(content);\n  }\n\n  return (\n    <form>\n      <textarea \n        placeholder=\"Paste XML content here!\"\n        className=\"form-control\"\n        value={content}\n        onChange={handleChange}\n      ></textarea>\n      <div className=\"d-grid gap-2\">\n        <button \n          className=\"btn btn-primary btn-lg\"\n          onClick={handleClick}\n        >Convert</button>\n      </div>\n    </form>\n  )\n}\n\nexport {\n  InputData\n}","\nconst Card = (props) => (\n  <div className=\"card shadow-sm\">\n    <div className=\"card-body\">\n      {props.children}\n    </div>\n  </div>\n);\n\nexport {\n  Card\n}","import get from 'lodash.get';\n\nconst mock = {\n  _attributes: { Date: '', Time: '' },\n  Text: { _text: '' },\n  From: { User: { _attributes: { FriendlyName: '' } } }\n};\n\nconst Message = (props) => {\n  const item = props.item || mock;\n  const badge = (check) => check ? 'badge bg-primary' : 'badge bg-secondary';\n  const align = (check) => check ? 'message' : 'message right';\n\n  return (\n    <li className={align(item.left)}>\n      <span className=\"from\">{item.From.User._attributes.FriendlyName}</span>\n      <span className={badge(item.left)}>{item.Text._text}</span>\n      <span className=\"timestamp\">{item._attributes.Date} {item._attributes.Time}</span>\n    </li>\n  );\n}\n\nconst Messages = (props) => {\n  const data = props.data || [mock,mock];\n  const key = 'From.User._attributes.FriendlyName';\n  let isLeft = true;\n\n  const refined = data\n    .filter(e => get(e, key))\n    .map((e,i, arr) => {\n      const prev = i !== 0 ? i-1 : 0;\n      const condition = get(e, key) !== get(arr[prev], key) \n      if (condition) { isLeft = !isLeft };\n      return {...e, left: isLeft};\n    });\n\n  return (\n    <ul className=\"list-unstyled\">\n      {refined.map((e,i) => <Message key={i} item={e} />)}\n    </ul>\n  )\n}\n\nexport {\n  Messages\n}","\nimport { useState, useEffect } from 'react';\nimport { xml2json } from 'xml-js'; \n\nimport { InputData } from './components/Input';\nimport { Card } from './components/Card';\nimport { Messages } from './components/Messages';\n\nimport './App.scss';\n\nconst Empty = () => <div></div>;\n\nfunction App() {\n  const [content, setContent] = useState('');\n  const [showInput, toggleInput] = useState(true);\n  const [data, setData] = useState({ Log: { Message: [] }});\n\n  const inputHandler = (xmlString) => setContent(xmlString);\n\n  useEffect(() => {\n    const result = xml2json(content, { compact: true, spaces: 4 });\n    const parsed = JSON.parse(result);\n\n    if (parsed.Log) {\n      setData(parsed);\n      toggleInput(false);\n    }\n  }, [content]);\n\n  return (\n    <main className=\"container\">\n      <Card>\n        <h2>MSN Messenger viewer</h2>\n        {showInput ? <InputData getXML={inputHandler} /> : <Messages data={data.Log.Message} />}\n      </Card>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}